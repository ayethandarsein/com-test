package com.panu.competitor.information.pojo.entity;
// Generated Oct 1, 2018 2:56:01 PM by Hibernate Tools 4.3.1

import com.panu.competitor.information.common.ConstantCommon;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Plant generated by hbm2java
 */
@Entity
@Table(name = "Plant")
@NamedQueries({
    @NamedQuery(name = "Plant.getPlants", query = "SELECT t FROM Plant t WHERE t.isDelete=" + ConstantCommon.STATUS_ISDELETE),
    @NamedQuery(name = "Plant.getPlantByPlantId", query = "SELECT t FROM Plant t WHERE t.plantId =:plantId AND t.activeStatus='"+ ConstantCommon.STATUS_ACTIVE+"' AND t.isDelete=" + ConstantCommon.STATUS_ISDELETE),
    @NamedQuery(name = "Plant.getPlantByCompanyId", query = "SELECT t FROM Plant t WHERE t.companyId =:companyId AND t.activeStatus='"+ ConstantCommon.STATUS_ACTIVE+"' AND t.isDelete=" + ConstantCommon.STATUS_ISDELETE)
})
public class Plant implements java.io.Serializable {

    private int plantId;
    private String plantName;
    private int companyId;
    private char activeStatus;
    private int location;
    private int zone;
    private Date plantPeriod;
    private BigDecimal longitude;
    private BigDecimal latitude;
    private boolean isDelete;
    private int createdUserId;
    private Date createdDate;
    private Integer updatedUserId;
    private Date updatedDate;

    public Plant() {
    }

    public Plant(int plantId, String plantName, int companyId, char activeStatus, int location, Date period, BigDecimal longitude, BigDecimal latitude, boolean isDelete, int createdUserId, Date createdDate) {
        this.plantId = plantId;
        this.plantName = plantName;
        this.companyId = companyId;
        this.activeStatus = activeStatus;
        this.location = location;
        this.plantPeriod= period;
        this.longitude = longitude;
        this.latitude = latitude;
        this.isDelete = isDelete;
        this.createdUserId = createdUserId;
        this.createdDate = createdDate;
    }

    public Plant(int plantId, String plantName, int companyId, char activeStatus, int location, int zone, Date period, BigDecimal longitude, BigDecimal latitude, boolean isDelete, int createdUserId, Date createdDate, Integer updatedUserId, Date updatedDate) {
        this.plantId = plantId;
        this.plantName = plantName;
        this.companyId = companyId;
        this.activeStatus = activeStatus;
        this.location = location;
        this.zone = zone;
        this.plantPeriod = period;
        this.longitude = longitude;
        this.latitude = latitude;
        this.isDelete = isDelete;
        this.createdUserId = createdUserId;
        this.createdDate = createdDate;
        this.updatedUserId = updatedUserId;
        this.updatedDate = updatedDate;
    }

    @Id

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "PlantId", unique = true, nullable = false)
    public int getPlantId() {
        return this.plantId;
    }

    public void setPlantId(int plantId) {
        this.plantId = plantId;
    }

    @Column(name = "PlantName", nullable = false, length = 50)
    public String getPlantName() {
        return this.plantName;
    }

    public void setPlantName(String plantName) {
        this.plantName = plantName;
    }

    @Column(name = "CompanyId", nullable = false)
    public int getCompanyId() {
        return this.companyId;
    }

    public void setCompanyId(int companyId) {
        this.companyId = companyId;
    }

    @Column(name = "ActiveStatus", nullable = false, length = 1)
    public char getActiveStatus() {
        return this.activeStatus;
    }

    public void setActiveStatus(char activeStatus) {
        this.activeStatus = activeStatus;
    }

    @Column(name = "Location", nullable = false)
    public int getLocation() {
        return this.location;
    }

    public void setLocation(int location) {
        this.location = location;
    }

    /**
     *
     * @return
     */
    @Column(name = "PlantPeriod", nullable = false)
    public Date getPlantPeriod() {
        return plantPeriod;
    }

    public void setPlantPeriod(Date plantPeriod) {
        this.plantPeriod = plantPeriod;
    }

    @Column(name = "Longitute", nullable = false, precision = 9, scale = 6)
    public BigDecimal getLongitude() {
        return this.longitude;
    }

    public void setLongitude(BigDecimal longitude) {
        this.longitude = longitude;
    }

    @Column(name = "Latitute", nullable = false, precision = 9, scale = 6)
    public BigDecimal getLatitude() {
        return this.latitude;
    }

    public void setLatitude(BigDecimal latitude) {
        this.latitude = latitude;
    }

    @Column(name = "IsDelete", nullable = false)
    public boolean isIsDelete() {
        return this.isDelete;
    }

    public void setIsDelete(boolean isDelete) {
        this.isDelete = isDelete;
    }

    @Column(name = "CreatedUserId", nullable = false)
    public int getCreatedUserId() {
        return this.createdUserId;
    }

    public void setCreatedUserId(int createdUserId) {
        this.createdUserId = createdUserId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CreatedDate", nullable = false, length = 23)
    public Date getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "UpdatedUserId")
    public Integer getUpdatedUserId() {
        return this.updatedUserId;
    }

    public void setUpdatedUserId(Integer updatedUserId) {
        this.updatedUserId = updatedUserId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UpdatedUserDate", length = 23)
    public Date getUpdatedDate() {
        return this.updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    @Column(name = "Zone")
    public int getZone() {
        return zone;
    }

    public void setZone(int zone) {
        this.zone = zone;
    }

}
