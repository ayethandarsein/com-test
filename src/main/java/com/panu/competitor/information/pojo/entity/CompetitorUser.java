package com.panu.competitor.information.pojo.entity;
// Generated Oct 1, 2018 2:56:01 PM by Hibernate Tools 4.3.1

import com.panu.competitor.information.common.ConstantCommon;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CompetitorUser generated by hbm2java
 */
@Entity
@Table(name = "CompetitorUser")
@NamedQueries({
    @NamedQuery(name = "CompetitorUser.getUsers", query = "SELECT t FROM CompetitorUser t WHERE t.isDelete=" + ConstantCommon.STATUS_ISDELETE),
    @NamedQuery(name = "CompetitorUser.findByUserName", query = "SELECT t FROM CompetitorUser t WHERE t.userName=:userName AND t.isDelete=" + ConstantCommon.STATUS_ISDELETE),
    @NamedQuery(name = "CompetitorUser.findByUserId", query = "SELECT t FROM CompetitorUser t WHERE t.userId=:userId AND t.isDelete=" + ConstantCommon.STATUS_ISDELETE),
    @NamedQuery(name = "CompetitorUser.findByRole", query = "SELECT t FROM CompetitorUser t WHERE t.roleId=:roleId AND t.isDelete=" + ConstantCommon.STATUS_ISDELETE)
})
public class CompetitorUser implements java.io.Serializable {

    private int userId;
    private byte[] version;
    private String userName;
    private String fullName;
    private String password;
    private String address;
    private String phone;
    private int roleId;
    private String email;
    private byte[] photo;
    private int isLogin;
    private boolean isDelete;
    private int createdUserId;
    private Date createdDate;
    private Integer updatedUserId;
    private Date updatedDate;

    public CompetitorUser() {
    }

    public CompetitorUser(int userId, String userName, String fullName, String password, int roleId, String email, int isLogin, boolean isDelete, int createdUserId, Date createdDate) {
        this.userId = userId;
        this.userName = userName;
        this.fullName = fullName;
        this.password = password;
        this.roleId = roleId;
        this.email = email;
        this.isLogin = isLogin;
        this.isDelete = isDelete;
        this.createdUserId = createdUserId;
        this.createdDate = createdDate;
    }

    public CompetitorUser(int userId, String userName, String fullName, String password, String address, String phone, int roleId, String email, byte[] photo, int isLogin, boolean isDelete, int createdUserId, Date createdDate, Integer updatedUserId, Date updatedDate) {
        this.userId = userId;
        this.userName = userName;
        this.fullName = fullName;
        this.password = password;
        this.address = address;
        this.phone = phone;
        this.roleId = roleId;
        this.email = email;
        this.photo = photo;
        this.isLogin = isLogin;
        this.isDelete = isDelete;
        this.createdUserId = createdUserId;
        this.createdDate = createdDate;
        this.updatedUserId = updatedUserId;
        this.updatedDate = updatedDate;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "UserId", unique = true, nullable = false)
    public int getUserId() {
        return this.userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    @Column(name = "UserName", nullable = false, length = 50)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name = "FullName", nullable = false, length = 50)
    public String getFullName() {
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Column(name = "Password", nullable = false, length = 130)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "Address", length = 200)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "Phone", length = 50)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "RoleId", nullable = false)
    public int getRoleId() {
        return this.roleId;
    }

    public void setRoleId(int roleId) {
        this.roleId = roleId;
    }

    @Column(name = "Email", nullable = false, length = 200)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "Photo")
    public byte[] getPhoto() {
        return this.photo;
    }

    public void setPhoto(byte[] photo) {
        this.photo = photo;
    }

    @Column(name = "IsLogin", nullable = false)
    public int getIsLogin() {
        return this.isLogin;
    }

    public void setIsLogin(int isLogin) {
        this.isLogin = isLogin;
    }

    @Column(name = "IsDelete", nullable = false)
    public boolean isIsDelete() {
        return this.isDelete;
    }

    public void setIsDelete(boolean isDelete) {
        this.isDelete = isDelete;
    }

    @Column(name = "CreatedUserId", nullable = false)
    public int getCreatedUserId() {
        return this.createdUserId;
    }

    public void setCreatedUserId(int createdUserId) {
        this.createdUserId = createdUserId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CreatedDate", nullable = false, length = 23)
    public Date getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "UpdatedUserId")
    public Integer getUpdatedUserId() {
        return this.updatedUserId;
    }

    public void setUpdatedUserId(Integer updatedUserId) {
        this.updatedUserId = updatedUserId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UpdatedDate", length = 23)
    public Date getUpdatedDate() {
        return this.updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

}
